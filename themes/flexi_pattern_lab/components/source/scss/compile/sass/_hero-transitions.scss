.hero-transition-svg-container {
  position: absolute;
  width: 100%;
  bottom: -1px;
  line-height: 0;

  svg {
    position: relative;
    width: 100%;
    bottom: 0;

    // @include media-breakpoint-up(lg) {
    //   bottom: -30px;
    // }
  }
}

/* If a Hero is below a 'Hero Transition', then dynamically calculate
 *  the padding that should be applied to the Hero below.
 *
 * The calculated value is:
 * - the ratio of the SVG size (width / height); ex: 1900 / 200 = 9.5
 * - multiplied by the size of the viewport
 * - and an additional 3rem of padding
 */
.hero-transition-single-wave {
  +.hero-wrapper .hero {
    padding-top: calc((100vw * 0.098) + 3rem) !important;
  }
}

.hero-transition-double-wave {
  +.hero-wrapper .hero {
    padding-top: calc((100vw * 0.11) + 3rem) !important;
  }
}

// Hill Transition
.hero-transition-hill {

  img {
    position: relative;
    max-height: 70vh;
  }

  @include media-breakpoint-up(lg) {
    img {
      max-height: 100%;
      position: absolute;
      bottom: 0;
    }

    .transition-hill-text {
      padding-bottom: calc((100vw * 0.10) - 1.5em);
    }
  }

  .hero-transition-svg-container {
    position: absolute;
    width: 100%;
    bottom: 0;
    line-height: 0;
  }
}

// Hill Transition Reactive
/*
 * If they want the image to appear "on top" of the hill,
 * 'hero-transition-hill-reactive' should be used.
 */
.hero-transition-hill-reactive {
  img {
    padding-bottom: calc((100vw * 0.10) - 1.5em);
  }

  @include media-breakpoint-up(md) {
    img {
      max-height: 80vh;
      position: relative;
    }
  }
}
